{
  "scan_info": {
    "app_path": "/Users/markmorales/Code/social-v1_groups",
    "rails_version": "6.1.3.2",
    "security_warnings": 0,
    "start_time": "2023-07-17 16:03:50 -0500",
    "end_time": "2023-07-17 16:04:07 -0500",
    "duration": 17.111335,
    "checks_performed": [
      "BasicAuth",
      "BasicAuthTimingAttack",
      "CSRFTokenForgeryCVE",
      "ContentTag",
      "CookieSerialization",
      "CreateWith",
      "CrossSiteScripting",
      "DefaultRoutes",
      "Deserialize",
      "DetailedExceptions",
      "DigestDoS",
      "DynamicFinders",
      "EscapeFunction",
      "Evaluation",
      "Execute",
      "FileAccess",
      "FileDisclosure",
      "FilterSkipping",
      "ForgerySetting",
      "HeaderDoS",
      "I18nXSS",
      "JRubyXML",
      "JSONEncoding",
      "JSONEntityEscape",
      "JSONParsing",
      "LinkTo",
      "LinkToHref",
      "MailTo",
      "MassAssignment",
      "MimeTypeDoS",
      "ModelAttrAccessible",
      "ModelAttributes",
      "ModelSerialize",
      "NestedAttributes",
      "NestedAttributesBypass",
      "NumberToCurrency",
      "PageCachingCVE",
      "PermitAttributes",
      "QuoteTableName",
      "Redirect",
      "RegexDoS",
      "Render",
      "RenderDoS",
      "RenderInline",
      "ResponseSplitting",
      "RouteDoS",
      "SQL",
      "SQLCVEs",
      "SSLVerify",
      "SafeBufferManipulation",
      "SanitizeMethods",
      "SelectTag",
      "SelectVulnerability",
      "Send",
      "SendFile",
      "SessionManipulation",
      "SessionSettings",
      "SimpleFormat",
      "SingleQuotes",
      "SkipBeforeFilter",
      "SprocketsPathTraversal",
      "StripTags",
      "SymbolDoSCVE",
      "TemplateInjection",
      "TranslateBug",
      "UnsafeReflection",
      "UnsafeReflectionMethods",
      "ValidationRegex",
      "VerbConfusion",
      "WithoutProtection",
      "XMLDoS",
      "YAMLParsing"
    ],
    "number_of_controllers": 286,
    "number_of_models": 173,
    "number_of_templates": 205,
    "ruby_version": "2.7.2",
    "brakeman_version": "5.0.1"
  },
  "warnings": [

  ],
  "ignored_warnings": [
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "04dbbc249b989db2e0119bbb0f59c9818e12889d2b97c529cdc0b1526002ba4b",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/report.rb",
      "line": 121,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "Admin::ActionLog.from(\"(#{[Admin::ActionLog.where(:target_type => \"Report\", :target_id => id, :created_at => ((created_at..updated_at))).unscope(:order), Admin::ActionLog.where(:target_type => \"Account\", :target_id => target_account_id, :created_at => ((created_at..updated_at))).unscope(:order), Admin::ActionLog.where(:target_type => \"Status\", :target_id => status_ids, :created_at => ((created_at..updated_at))).unscope(:order)].map do\n \"(#{query.to_sql})\"\n end.join(\" UNION ALL \")}) AS admin_action_logs\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Report",
        "method": "history"
      },
      "user_input": "Admin::ActionLog.where(:target_type => \"Status\", :target_id => status_ids, :created_at => ((created_at..updated_at))).unscope(:order)",
      "confidence": "High"
    },
    {
      "warning_type": "Mass Assignment",
      "warning_code": 105,
      "fingerprint": "0a8e1b95121cc27c9eccfa472297b9c738b55e8511a902dfb0cd6c0861cf4a29",
      "check_name": "PermitAttributes",
      "message": "Potentially dangerous key allowed for mass assignment",
      "file": "app/controllers/api/v1/groups_controller.rb",
      "line": 186,
      "link": "https://brakemanscanner.org/docs/warning_types/mass_assignment/",
      "code": "params.permit(:role, :account_ids => ([]), :tags => ([]))",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Api::V1::GroupsController",
        "method": "resource_params"
      },
      "user_input": ":role",
      "confidence": "Medium"
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "19df3740b8d02a9fe0eb52c939b4b87d3a2a591162a6adfa8d64e9c26aeebe6d",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/status.rb",
      "line": 131,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "result.joins(\"INNER JOIN statuses_tags t#{id} ON t#{id}.status_id = statuses.id AND t#{id}.tag_id = #{id}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Status",
        "method": null
      },
      "user_input": "id",
      "confidence": "Weak"
    },
    {
      "warning_type": "Mass Assignment",
      "warning_code": 105,
      "fingerprint": "224a66f0b51e79901fae28810d09f30d6cd5a9b45eef4699ecb95dff9bd4aa95",
      "check_name": "PermitAttributes",
      "message": "Potentially dangerous key allowed for mass assignment",
      "file": "app/controllers/api/v2/search_controller.rb",
      "line": 28,
      "link": "https://brakemanscanner.org/docs/warning_types/mass_assignment/",
      "code": "params.permit(:type, :offset, :min_id, :max_id, :account_id, :q, :resolve, :exclude_unreviewed, :limit)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Api::V2::SearchController",
        "method": "search_params"
      },
      "user_input": ":account_id",
      "confidence": "High"
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "3373360caca1c1ecad29d946fe605fb60d1ae163d68685c01faee2e86b7ef160",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/status.rb",
      "line": 503,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "select(\"*\").from(\"(select s.* from statuses s\\n                        inner join conversations c on c.id = s.conversation_id\\n                        inner join conversation_mutes cm on cm.conversation_id = c.id\\n                        where cm.account_id = #{account_id} and in_reply_to_id is null) as statuses\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Status",
        "method": "muted_conversations_for_account"
      },
      "user_input": "account_id",
      "confidence": "Weak"
    },
    {
      "warning_type": "Redirect",
      "warning_code": 18,
      "fingerprint": "5fad11cd67f905fab9b1d5739d01384a1748ebe78c5af5ac31518201925265a7",
      "check_name": "Redirect",
      "message": "Possible unprotected redirect",
      "file": "app/controllers/remote_interaction_controller.rb",
      "line": 24,
      "link": "https://brakemanscanner.org/docs/warning_types/redirect/",
      "code": "redirect_to(RemoteFollow.new(resource_params).interact_address_for(Status.find(params[:id])))",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "RemoteInteractionController",
        "method": "create"
      },
      "user_input": "RemoteFollow.new(resource_params).interact_address_for(Status.find(params[:id]))",
      "confidence": "High"
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "6e4051854bb62e2ddbc671f82d6c2328892e1134b8b28105ecba9b0122540714",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/account.rb",
      "line": 611,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "find_by_sql([\"          WITH first_degree AS (\\n            SELECT target_account_id\\n            FROM follows\\n            WHERE account_id = ?\\n            UNION ALL\\n            SELECT ?\\n          )\\n          SELECT\\n            accounts.*,\\n            (count(f.id) + 1) * ts_rank_cd(#{textsearch}, #{query}, 32) AS rank\\n          FROM accounts\\n          LEFT OUTER JOIN follows AS f ON (accounts.id = f.account_id AND f.target_account_id = ?)\\n          WHERE accounts.id IN (SELECT * FROM first_degree)\\n            AND #{query} @@ #{textsearch}\\n            AND accounts.suspended_at IS NULL\\n            AND accounts.moved_to_account_id IS NULL\\n          GROUP BY accounts.id\\n          ORDER BY rank DESC\\n          LIMIT ? OFFSET ?\\n\".squish, account.id, account.id, account.id, limit, offset])",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Account",
        "method": "advanced_search_for"
      },
      "user_input": "textsearch",
      "confidence": "Medium"
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "6f075c1484908e3ec9bed21ab7cf3c7866be8da3881485d1c82e13093aefcbd7",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/status.rb",
      "line": 136,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "result.joins(\"LEFT OUTER JOIN statuses_tags t#{id} ON t#{id}.status_id = statuses.id AND t#{id}.tag_id = #{id}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Status",
        "method": null
      },
      "user_input": "id",
      "confidence": "Weak"
    },
    {
      "warning_type": "Mass Assignment",
      "warning_code": 105,
      "fingerprint": "874be88fedf4c680926845e9a588d3197765a6ccbfdd76466b44cc00151c612e",
      "check_name": "PermitAttributes",
      "message": "Potentially dangerous key allowed for mass assignment",
      "file": "app/controllers/api/v1/admin/reports_controller.rb",
      "line": 78,
      "link": "https://brakemanscanner.org/docs/warning_types/mass_assignment/",
      "code": "params.permit(:resolved, :account_id, :target_account_id)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Api::V1::Admin::ReportsController",
        "method": "filter_params"
      },
      "user_input": ":account_id",
      "confidence": "High"
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "9251d682c4e2840e1b2fea91e7d758efe2097ecb7f6255c065e3750d25eb178c",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/account.rb",
      "line": 580,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "find_by_sql([\"        SELECT\\n          accounts.*,\\n          ts_rank_cd(#{textsearch}, #{query}, 32) AS rank\\n        FROM accounts\\n        WHERE #{query} @@ #{textsearch}\\n          AND accounts.suspended_at IS NULL\\n          AND accounts.moved_to_account_id IS NULL\\n        ORDER BY rank DESC\\n        LIMIT ? OFFSET ?\\n\".squish, limit, offset])",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Account",
        "method": "search_for"
      },
      "user_input": "textsearch",
      "confidence": "Medium"
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "9ccb9ba6a6947400e187d515e0bf719d22993d37cfc123c824d7fafa6caa9ac3",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "lib/mastodon/snowflake.rb",
      "line": 87,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "connection.execute(\"        CREATE OR REPLACE FUNCTION timestamp_id(table_name text)\\n        RETURNS bigint AS\\n        $$\\n          DECLARE\\n            time_part bigint;\\n            sequence_base bigint;\\n            tail bigint;\\n          BEGIN\\n            time_part := (\\n              -- Get the time in milliseconds\\n              ((date_part('epoch', now()) * 1000))::bigint\\n              -- And shift it over two bytes\\n              << 16);\\n\\n            sequence_base := (\\n              'x' ||\\n              -- Take the first two bytes (four hex characters)\\n              substr(\\n                -- Of the MD5 hash of the data we documented\\n                md5(table_name ||\\n                  '#{SecureRandom.hex(16)}' ||\\n                  time_part::text\\n                ),\\n                1, 4\\n              )\\n            -- And turn it into a bigint\\n            )::bit(16)::bigint;\\n\\n            -- Finally, add our sequence number to our base, and chop\\n            -- it to the last two bytes\\n            tail := (\\n              (sequence_base + nextval(table_name || '_id_seq'))\\n              & 65535);\\n\\n            -- Return the time part and the sequence part. OR appears\\n            -- faster here than addition, but they're equivalent:\\n            -- time_part has no trailing two bytes, and tail is only\\n            -- the last two bytes.\\n            RETURN time_part | tail;\\n          END\\n        $$ LANGUAGE plpgsql VOLATILE;\\n\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Mastodon::Snowflake",
        "method": "define_timestamp_id"
      },
      "user_input": "SecureRandom.hex(16)",
      "confidence": "Medium"
    },
    {
      "warning_type": "Mass Assignment",
      "warning_code": 105,
      "fingerprint": "ab5035dd1a9f8c3a8d92fb2c37e8fe86fede4f87c91b71aa32e89c9eede602fc",
      "check_name": "PermitAttributes",
      "message": "Potentially dangerous key allowed for mass assignment",
      "file": "app/controllers/api/v1/notifications_controller.rb",
      "line": 82,
      "link": "https://brakemanscanner.org/docs/warning_types/mass_assignment/",
      "code": "params.permit(:account_id, :types => ([]), :exclude_types => ([]))",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Api::V1::NotificationsController",
        "method": "browserable_params"
      },
      "user_input": ":account_id",
      "confidence": "High"
    },
    {
      "warning_type": "Redirect",
      "warning_code": 18,
      "fingerprint": "ba568ac09683f98740f663f3d850c31785900215992e8c090497d359a2563d50",
      "check_name": "Redirect",
      "message": "Possible unprotected redirect",
      "file": "app/controllers/remote_follow_controller.rb",
      "line": 21,
      "link": "https://brakemanscanner.org/docs/warning_types/redirect/",
      "code": "redirect_to(RemoteFollow.new(resource_params).subscribe_address_for(@account))",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "RemoteFollowController",
        "method": "create"
      },
      "user_input": "RemoteFollow.new(resource_params).subscribe_address_for(@account)",
      "confidence": "High"
    },
    {
      "warning_type": "Redirect",
      "warning_code": 18,
      "fingerprint": "ba699ddcc6552c422c4ecd50d2cd217f616a2446659e185a50b05a0f2dad8d33",
      "check_name": "Redirect",
      "message": "Possible unprotected redirect",
      "file": "app/controllers/media_controller.rb",
      "line": 20,
      "link": "https://brakemanscanner.org/docs/warning_types/redirect/",
      "code": "redirect_to(MediaAttachment.attached.find_by!(:shortcode => ((params[:id] or params[:medium_id]))).file.url(:original))",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "MediaController",
        "method": "show"
      },
      "user_input": "MediaAttachment.attached.find_by!(:shortcode => ((params[:id] or params[:medium_id]))).file.url(:original)",
      "confidence": "High"
    },
    {
      "warning_type": "Mass Assignment",
      "warning_code": 105,
      "fingerprint": "d6003f47b2ac2aa2a8c7e56d8a78d9490999ec6c6e0b82c353575084f8bd47cd",
      "check_name": "PermitAttributes",
      "message": "Potentially dangerous key allowed for mass assignment",
      "file": "app/controllers/api/v1/reports_controller.rb",
      "line": 84,
      "link": "https://brakemanscanner.org/docs/warning_types/mass_assignment/",
      "code": "params.permit(:account_id, :comment, :forward, :group_id, :external_ad_url, :external_ad_media_url, :external_ad_description, :status_ids => ([]), :rule_ids => ([]), :message_ids => ([]))",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Api::V1::ReportsController",
        "method": "report_params"
      },
      "user_input": ":account_id",
      "confidence": "High"
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "e21d8fee7a5805761679877ca35ed1029c64c45ef3b4012a30262623e1ba8bb9",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/account.rb",
      "line": 627,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "find_by_sql([\"          SELECT\\n            accounts.*,\\n            (count(f.id) + 1) * ts_rank_cd(#{textsearch}, #{query}, 32) AS rank\\n          FROM accounts\\n          LEFT OUTER JOIN follows AS f ON (accounts.id = f.account_id AND f.target_account_id = ?) OR (accounts.id = f.target_account_id AND f.account_id = ?)\\n          WHERE #{query} @@ #{textsearch}\\n            AND accounts.suspended_at IS NULL\\n            AND accounts.moved_to_account_id IS NULL\\n          GROUP BY accounts.id\\n          ORDER BY rank DESC\\n          LIMIT ? OFFSET ?\\n\".squish, account.id, account.id, limit, offset])",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Account",
        "method": "advanced_search_for"
      },
      "user_input": "textsearch",
      "confidence": "Medium"
    }
  ],
  "errors": [

  ],
  "obsolete": [
    "a9c222f356d8b4b673445f266f86e6bfce87df4e97a25ac36407367ee1269bf4"
  ]
}