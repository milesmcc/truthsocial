{"version":3,"sources":["webpack:///./app/javascript/mastodon/features/ui/components/block_modal.js"],"names":["BlockModal","connect","getAccount","makeGetAccount","state","account","getIn","dispatch","onConfirm","blockAccount","get","onBlockAndReport","initReport","onClose","closeModal","injectIntl","handleClick","props","handleSecondary","handleCancel","setRef","c","button","componentDidMount","this","focus","render","className","id","defaultMessage","values","name","onClick","ref","React","PureComponent"],"mappings":"qOAwCMA,EAFUC,mBA3BY,WAC1B,IAAMC,EAAaC,cAMnB,OAJwB,SAAAC,GAAK,MAAK,CAChCC,QAASH,EAAWE,EAAOA,EAAME,MAAM,CAAC,SAAU,MAAO,qBAMlC,SAAAC,GACzB,MAAO,CACLC,UAAUH,GACRE,EAASE,YAAaJ,EAAQK,IAAI,SAGpCC,iBAAiBN,GACfE,EAASE,YAAaJ,EAAQK,IAAI,QAClCH,EAASK,YAAWP,KAGtBQ,UACEN,EAASO,mB,GAMdC,Y,sJAeCC,YAAc,WACZ,EAAKC,MAAMJ,UACX,EAAKI,MAAMT,UAAU,EAAKS,MAAMZ,U,EAGlCa,gBAAkB,WAChB,EAAKD,MAAMJ,UACX,EAAKI,MAAMN,iBAAiB,EAAKM,MAAMZ,U,EAGzCc,aAAe,WACb,EAAKF,MAAMJ,W,EAGbO,OAAS,SAACC,GACR,EAAKC,OAASD,G,8CAnBhBE,kBAAA,WACEC,KAAKF,OAAOG,S,EAqBdC,OAAA,WACE,IAAQrB,EAAYmB,KAAKP,MAAjBZ,QAER,OACE,mBAAKsB,UAAU,sCAAf,EACE,mBAAKA,UAAU,+BAAf,EACE,0BACE,YAAC,IAAD,CACEC,GAAG,8BACHC,eAAe,yCACfC,OAAQ,CAAEC,KAAM,mCAAU1B,EAAQK,IAAI,cAK5C,mBAAKiB,UAAU,gCAAf,EACE,YAAC,IAAD,CAAQK,QAASR,KAAKL,aAAcQ,UAAU,mCAA9C,EACE,YAAC,IAAD,CAAkBC,GAAG,4BAA4BC,eAAe,YAElE,YAAC,IAAD,CAAQG,QAASR,KAAKN,gBAAiBS,UAAU,6CAAjD,EACE,YAAC,IAAD,CAAkBC,GAAG,uCAAuCC,eAAe,oBAE7E,kBAAC,IAAD,CAAQG,QAASR,KAAKR,YAAaiB,IAAKT,KAAKJ,QAC3C,YAAC,IAAD,CAAkBQ,GAAG,8BAA8BC,eAAe,c,GAvDrDK,IAAMC,iB","file":"js/modals/block_modal-5a137948585aadad5c29.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { makeGetAccount } from '../../../selectors';\nimport Button from '../../../components/button';\nimport { closeModal } from '../../../actions/modal';\nimport { blockAccount } from '../../../actions/accounts';\nimport { initReport } from '../../../actions/reports';\n\n\nconst makeMapStateToProps = () => {\n  const getAccount = makeGetAccount();\n\n  const mapStateToProps = state => ({\n    account: getAccount(state, state.getIn(['blocks', 'new', 'account_id'])),\n  });\n\n  return mapStateToProps;\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onConfirm(account) {\n      dispatch(blockAccount(account.get('id')));\n    },\n\n    onBlockAndReport(account) {\n      dispatch(blockAccount(account.get('id')));\n      dispatch(initReport(account));\n    },\n\n    onClose() {\n      dispatch(closeModal());\n    },\n  };\n};\n\nexport default @connect(makeMapStateToProps, mapDispatchToProps)\n@injectIntl\nclass BlockModal extends React.PureComponent {\n\n  static propTypes = {\n    account: PropTypes.object.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onBlockAndReport: PropTypes.func.isRequired,\n    onConfirm: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  componentDidMount() {\n    this.button.focus();\n  }\n\n  handleClick = () => {\n    this.props.onClose();\n    this.props.onConfirm(this.props.account);\n  }\n\n  handleSecondary = () => {\n    this.props.onClose();\n    this.props.onBlockAndReport(this.props.account);\n  }\n\n  handleCancel = () => {\n    this.props.onClose();\n  }\n\n  setRef = (c) => {\n    this.button = c;\n  }\n\n  render () {\n    const { account } = this.props;\n\n    return (\n      <div className='modal-root__modal block-modal'>\n        <div className='block-modal__container'>\n          <p>\n            <FormattedMessage\n              id='confirmations.block.message'\n              defaultMessage='Are you sure you want to block {name}?'\n              values={{ name: <strong>@{account.get('acct')}</strong> }}\n            />\n          </p>\n        </div>\n\n        <div className='block-modal__action-bar'>\n          <Button onClick={this.handleCancel} className='block-modal__cancel-button'>\n            <FormattedMessage id='confirmation_modal.cancel' defaultMessage='Cancel' />\n          </Button>\n          <Button onClick={this.handleSecondary} className='confirmation-modal__secondary-button'>\n            <FormattedMessage id='confirmations.block.block_and_report' defaultMessage='Block & Report' />\n          </Button>\n          <Button onClick={this.handleClick} ref={this.setRef}>\n            <FormattedMessage id='confirmations.block.confirm' defaultMessage='Block' />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n}\n"],"sourceRoot":""}