{"version":3,"sources":["webpack:///./app/javascript/mastodon/features/ui/components/embed_modal.js"],"names":["messages","defineMessages","close","EmbedModal","injectIntl","state","loading","oembed","setIframeRef","c","iframe","handleTextareaClick","e","target","select","componentDidMount","url","this","props","setState","api","post","then","res","data","iframeDocument","contentWindow","document","open","write","html","body","style","margin","width","scrollWidth","height","scrollHeight","catch","error","onError","render","intl","onClose","className","title","formatMessage","icon","onClick","size","id","defaultMessage","display","type","readOnly","value","frameBorder","ref","sandbox","ImmutablePureComponent","propTypes","PropTypes","string","isRequired","func","object"],"mappings":"iOAOMA,EAAWC,YAAe,CAC9BC,MAAM,CAAD,8CAIDC,EADUC,a,wJAUdC,MAAQ,CACNC,SAAS,EACTC,OAAQ,M,EAyBVC,aAAe,SAAAC,GACb,EAAKC,OAASD,G,EAGhBE,oBAAsB,SAACC,GACrBA,EAAEC,OAAOC,U,8CA3BXC,kBAAA,WAAsB,IAAD,OACXC,EAAQC,KAAKC,MAAbF,IAERC,KAAKE,SAAS,CAAEb,SAAS,IAEzBc,cAAMC,KAAK,iBAAkB,CAAEL,QAAOM,MAAK,SAAAC,GACzC,EAAKJ,SAAS,CAAEb,SAAS,EAAOC,OAAQgB,EAAIC,OAE5C,IAAMC,EAAiB,EAAKf,OAAOgB,cAAcC,SAEjDF,EAAeG,OACfH,EAAeI,MAAMN,EAAIC,KAAKM,MAC9BL,EAAevB,QAEfuB,EAAeM,KAAKC,MAAMC,OAAS,EACnC,EAAKvB,OAAOwB,MAAST,EAAeM,KAAKI,YACzC,EAAKzB,OAAO0B,OAASX,EAAeM,KAAKM,gBACxCC,OAAM,SAAAC,GACP,EAAKrB,MAAMsB,QAAQD,O,EAYvBE,OAAA,WACE,MAA0BxB,KAAKC,MAAvBwB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QACNpC,EAAWU,KAAKZ,MAAhBE,OAER,OACE,mBAAKqC,UAAU,mDAAf,EACE,mBAAKA,UAAU,6BAAf,EACE,YAAC,IAAD,CAAYA,UAAU,qBAAqBC,MAAOH,EAAKI,cAAc9C,EAASE,OAAQ6C,KAAK,QAAQC,QAASL,EAASM,KAAM,KAC3H,YAAC,IAAD,CAAkBC,GAAG,eAAeC,eAAe,WAGrD,mBAAKP,UAAU,iDAAiDZ,MAAO,CAAEoB,QAAS,eAAlF,EACE,iBAAGR,UAAU,aAAb,EACE,YAAC,IAAD,CAAkBM,GAAG,qBAAqBC,eAAe,kEAG3D,qBACEE,KAAK,OACLT,UAAU,oBACVU,UAAQ,EACRC,MAAOhD,GAAUA,EAAOuB,MAAQ,GAChCkB,QAAS/B,KAAKN,sBAGhB,iBAAGiC,UAAU,aAAb,EACE,YAAC,IAAD,CAAkBM,GAAG,gBAAgBC,eAAe,qCAGtD,4BACEP,UAAU,sBACVY,YAAY,IACZC,IAAKxC,KAAKT,aACVkD,QAAQ,oBACRb,MAAM,e,GA7EOc,K,EAEhBC,UAAY,CACjB5C,IAAK6C,IAAUC,OAAOC,WACtBpB,QAASkB,IAAUG,KAAKD,WACxBvB,QAASqB,IAAUG,KAAKD,WACxBrB,KAAMmB,IAAUI,OAAOF,Y","file":"js/modals/embed_modal-dff024994c7597b28d0f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport api from 'mastodon/api';\nimport IconButton from 'mastodon/components/icon_button';\n\nconst messages = defineMessages({\n  close: { id: 'lightbox.close', defaultMessage: 'Close' },\n});\n\nexport default @injectIntl\nclass EmbedModal extends ImmutablePureComponent {\n\n  static propTypes = {\n    url: PropTypes.string.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onError: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  }\n\n  state = {\n    loading: false,\n    oembed: null,\n  };\n\n  componentDidMount () {\n    const { url } = this.props;\n\n    this.setState({ loading: true });\n\n    api().post('/api/web/embed', { url }).then(res => {\n      this.setState({ loading: false, oembed: res.data });\n\n      const iframeDocument = this.iframe.contentWindow.document;\n\n      iframeDocument.open();\n      iframeDocument.write(res.data.html);\n      iframeDocument.close();\n\n      iframeDocument.body.style.margin = 0;\n      this.iframe.width  = iframeDocument.body.scrollWidth;\n      this.iframe.height = iframeDocument.body.scrollHeight;\n    }).catch(error => {\n      this.props.onError(error);\n    });\n  }\n\n  setIframeRef = c =>  {\n    this.iframe = c;\n  }\n\n  handleTextareaClick = (e) => {\n    e.target.select();\n  }\n\n  render () {\n    const { intl, onClose } = this.props;\n    const { oembed } = this.state;\n\n    return (\n      <div className='modal-root__modal report-modal embed-modal'>\n        <div className='report-modal__target'>\n          <IconButton className='media-modal__close' title={intl.formatMessage(messages.close)} icon='times' onClick={onClose} size={16} />\n          <FormattedMessage id='status.embed' defaultMessage='Embed' />\n        </div>\n\n        <div className='report-modal__container embed-modal__container' style={{ display: 'block' }}>\n          <p className='hint'>\n            <FormattedMessage id='embed.instructions' defaultMessage='Embed this status on your website by copying the code below.' />\n          </p>\n\n          <input\n            type='text'\n            className='embed-modal__html'\n            readOnly\n            value={oembed && oembed.html || ''}\n            onClick={this.handleTextareaClick}\n          />\n\n          <p className='hint'>\n            <FormattedMessage id='embed.preview' defaultMessage='Here is what it will look like:' />\n          </p>\n\n          <iframe\n            className='embed-modal__iframe'\n            frameBorder='0'\n            ref={this.setIframeRef}\n            sandbox='allow-same-origin'\n            title='preview'\n          />\n        </div>\n      </div>\n    );\n  }\n\n}\n"],"sourceRoot":""}