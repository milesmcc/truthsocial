{"version":3,"sources":["webpack:///./app/javascript/mastodon/features/compose/index.js"],"names":["messages","defineMessages","start","home_timeline","notifications","public","community","preferences","logout","compose","logoutMessage","logoutConfirm","Compose","connect","state","ownProps","columns","getIn","showSearch","multiColumn","isSearchPage","injectIntl","handleLogoutClick","e","props","dispatch","intl","preventDefault","stopPropagation","openModal","message","formatMessage","confirm","onConfirm","logOut","onFocus","changeComposing","onBlur","componentDidMount","this","mountCompose","componentWillUnmount","unmountCompose","render","header","className","to","title","aria-label","id","fixedWidth","some","column","get","href","onClick","role","onClose","alt","draggable","src","mascot","elephantUIPlane","defaultStyle","x","style","spring","stiffness","damping","transform","visibility","React","PureComponent"],"mappings":"mTAoBMA,EAAWC,YAAe,CAC9BC,MAAM,CAAD,+DACLC,cAAc,CAAD,0CACbC,cAAc,CAAD,4DACbC,OAAO,CAAD,yEACNC,UAAU,CAAD,wEACTC,YAAY,CAAD,8DACXC,OAAO,CAAD,oDACNC,QAAQ,CAAD,+DACPC,cAAc,CAAD,sFACbC,cAAc,CAAD,8DAUTC,EAFUC,mBALQ,SAACC,EAAOC,GAAR,MAAsB,CAC5CC,QAASF,EAAMG,MAAM,CAAC,WAAY,YAClCC,WAAYH,EAASI,YAAcL,EAAMG,MAAM,CAAC,SAAU,gBAAkBH,EAAMG,MAAM,CAAC,SAAU,WAAaF,EAASK,gB,GAI1HC,Y,sJA4BCC,kBAAoB,SAAAC,GAClB,MAA2B,EAAKC,MAAxBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,KAWlB,OATAH,EAAEI,iBACFJ,EAAEK,kBAEFH,EAASI,YAAU,UAAW,CAC5BC,QAASJ,EAAKK,cAAc/B,EAASU,eACrCsB,QAASN,EAAKK,cAAc/B,EAASW,eACrCsB,UAAW,kBAAMC,mBAGZ,G,EAGTC,QAAU,WACR,EAAKX,MAAMC,SAASW,aAAgB,K,EAGtCC,OAAS,WACP,EAAKb,MAAMC,SAASW,aAAgB,K,8CApCtCE,kBAAA,WAC2BC,KAAKf,MAAtBJ,cAGNmB,KAAKf,MAAMC,SAASe,iB,EAIxBC,qBAAA,WAC2BF,KAAKf,MAAtBJ,cAGNmB,KAAKf,MAAMC,SAASiB,iB,EA2BxBC,OAAA,WACE,MAAwDJ,KAAKf,MAArDL,EAAR,EAAQA,YAAaD,EAArB,EAAqBA,WAAYE,EAAjC,EAAiCA,aAAcM,EAA/C,EAA+CA,KAE3CkB,EAAS,GAEb,GAAIzB,EAAa,CACf,IAAQH,EAAYuB,KAAKf,MAAjBR,QACR4B,EACE,mBAAKC,UAAU,uBAAf,EACE,YAAC,IAAD,CAAMC,GAAG,mBAAmBD,UAAU,cAAcE,MAAOrB,EAAKK,cAAc/B,EAASE,OAAQ8C,aAAYtB,EAAKK,cAAc/B,EAASE,aAAvI,EAA+I,YAAC,IAAD,CAAM+C,GAAG,OAAOC,YAAU,MACvKlC,EAAQmC,MAAK,SAAAC,GAAM,MAAyB,SAArBA,EAAOC,IAAI,UAClC,YAAC,IAAD,CAAMP,GAAG,kBAAkBD,UAAU,cAAcE,MAAOrB,EAAKK,cAAc/B,EAASG,eAAgB6C,aAAYtB,EAAKK,cAAc/B,EAASG,qBAA9I,EAA8J,YAAC,IAAD,CAAM8C,GAAG,OAAOC,YAAU,MAExLlC,EAAQmC,MAAK,SAAAC,GAAM,MAAyB,kBAArBA,EAAOC,IAAI,UAClC,YAAC,IAAD,CAAMP,GAAG,iBAAiBD,UAAU,cAAcE,MAAOrB,EAAKK,cAAc/B,EAASI,eAAgB4C,aAAYtB,EAAKK,cAAc/B,EAASI,qBAA7I,EAA6J,YAAC,IAAD,CAAM6C,GAAG,OAAOC,YAAU,MAEvLlC,EAAQmC,MAAK,SAAAC,GAAM,MAAyB,cAArBA,EAAOC,IAAI,UAClC,YAAC,IAAD,CAAMP,GAAG,0BAA0BD,UAAU,cAAcE,MAAOrB,EAAKK,cAAc/B,EAASM,WAAY0C,aAAYtB,EAAKK,cAAc/B,EAASM,iBAAlJ,EAA8J,YAAC,IAAD,CAAM2C,GAAG,QAAQC,YAAU,MAEzLlC,EAAQmC,MAAK,SAAAC,GAAM,MAAyB,WAArBA,EAAOC,IAAI,UAClC,YAAC,IAAD,CAAMP,GAAG,oBAAoBD,UAAU,cAAcE,MAAOrB,EAAKK,cAAc/B,EAASK,QAAS2C,aAAYtB,EAAKK,cAAc/B,EAASK,cAAzI,EAAkJ,YAAC,IAAD,CAAM4C,GAAG,QAAQC,YAAU,KAE/K,iBAAGI,KAAK,wBAAwBT,UAAU,cAAcE,MAAOrB,EAAKK,cAAc/B,EAASO,aAAcyC,aAAYtB,EAAKK,cAAc/B,EAASO,mBAAjJ,EAA+J,YAAC,IAAD,CAAM0C,GAAG,MAAMC,YAAU,KACxL,iBAAGI,KAAK,iBAAiBT,UAAU,cAAcE,MAAOrB,EAAKK,cAAc/B,EAASQ,QAASwC,aAAYtB,EAAKK,cAAc/B,EAASQ,QAAS+C,QAAShB,KAAKjB,wBAA5J,EAA+K,YAAC,IAAD,CAAM2B,GAAG,WAAWC,YAAU,MAKnN,OACE,mBAAKL,UAAU,SAASW,KAAK,SAASR,aAAYtB,EAAKK,cAAc/B,EAASS,eAA9E,EACGmC,GAECzB,GAAeC,IAAiB,YAAC,IAAD,IAElC,mBAAKyB,UAAU,sBAAf,GACIzB,GAAgB,mBAAKyB,UAAU,gBAAgBV,QAASI,KAAKJ,cAA7C,EAChB,YAAC,IAAD,CAAqBsB,QAASlB,KAAKF,SAEnC,YAAC,IAAD,IAEA,mBAAKQ,UAAU,gCAAf,EACE,mBAAKa,IAAI,GAAGC,UAAU,QAAQC,IAAKC,KAAUC,cAIjD,YAAC,IAAD,CAAQC,aAAc,CAAEC,EAAG5C,EAAe,GAAK,KAAO6C,MAAO,CAAED,EAAGE,IAAOhD,GAAcE,EAAe,GAAK,IAAK,CAAE+C,UAAW,IAAKC,QAAS,YAA3I,GACG,gBAAGJ,EAAH,EAAGA,EAAH,OACC,mBAAKnB,UAAU,uBAAuBoB,MAAO,CAAEI,UAAU,cAAeL,EAAhB,KAAuBM,YAAmB,MAAPN,EAAa,SAAW,iBAAnH,EACE,YAAC,IAAD,W,GAlGMO,IAAMC,iB","file":"js/features/compose-5188433efff750ecd545.chunk.js","sourcesContent":["import React from 'react';\nimport ComposeFormContainer from './containers/compose_form_container';\nimport NavigationContainer from './containers/navigation_container';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\nimport { mountCompose, unmountCompose } from '../../actions/compose';\nimport { Link } from 'react-router-dom';\nimport { injectIntl, defineMessages } from 'react-intl';\nimport SearchContainer from './containers/search_container';\nimport Motion from '../ui/util/optional_motion';\nimport spring from 'react-motion/lib/spring';\nimport SearchResultsContainer from './containers/search_results_container';\nimport { changeComposing } from '../../actions/compose';\nimport { openModal } from 'mastodon/actions/modal';\nimport elephantUIPlane from '../../../images/elephant_ui_plane.svg';\nimport { mascot } from '../../initial_state';\nimport Icon from 'mastodon/components/icon';\nimport { logOut } from 'mastodon/utils/log_out';\n\nconst messages = defineMessages({\n  start: { id: 'getting_started.heading', defaultMessage: 'Getting started' },\n  home_timeline: { id: 'tabs_bar.home', defaultMessage: 'Home' },\n  notifications: { id: 'tabs_bar.notifications', defaultMessage: 'Notifications' },\n  public: { id: 'navigation_bar.public_timeline', defaultMessage: 'Federated timeline' },\n  community: { id: 'navigation_bar.community_timeline', defaultMessage: 'Local timeline' },\n  preferences: { id: 'navigation_bar.preferences', defaultMessage: 'Preferences' },\n  logout: { id: 'navigation_bar.logout', defaultMessage: 'Logout' },\n  compose: { id: 'navigation_bar.compose', defaultMessage: 'Compose new toot' },\n  logoutMessage: { id: 'confirmations.logout.message', defaultMessage: 'Are you sure you want to log out?' },\n  logoutConfirm: { id: 'confirmations.logout.confirm', defaultMessage: 'Log out' },\n});\n\nconst mapStateToProps = (state, ownProps) => ({\n  columns: state.getIn(['settings', 'columns']),\n  showSearch: ownProps.multiColumn ? state.getIn(['search', 'submitted']) && !state.getIn(['search', 'hidden']) : ownProps.isSearchPage,\n});\n\nexport default @connect(mapStateToProps)\n@injectIntl\nclass Compose extends React.PureComponent {\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    columns: ImmutablePropTypes.list.isRequired,\n    multiColumn: PropTypes.bool,\n    showSearch: PropTypes.bool,\n    isSearchPage: PropTypes.bool,\n    intl: PropTypes.object.isRequired,\n  };\n\n  componentDidMount () {\n    const { isSearchPage } = this.props;\n\n    if (!isSearchPage) {\n      this.props.dispatch(mountCompose());\n    }\n  }\n\n  componentWillUnmount () {\n    const { isSearchPage } = this.props;\n\n    if (!isSearchPage) {\n      this.props.dispatch(unmountCompose());\n    }\n  }\n\n  handleLogoutClick = e => {\n    const { dispatch, intl } = this.props;\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    dispatch(openModal('CONFIRM', {\n      message: intl.formatMessage(messages.logoutMessage),\n      confirm: intl.formatMessage(messages.logoutConfirm),\n      onConfirm: () => logOut(),\n    }));\n\n    return false;\n  }\n\n  onFocus = () => {\n    this.props.dispatch(changeComposing(true));\n  }\n\n  onBlur = () => {\n    this.props.dispatch(changeComposing(false));\n  }\n\n  render () {\n    const { multiColumn, showSearch, isSearchPage, intl } = this.props;\n\n    let header = '';\n\n    if (multiColumn) {\n      const { columns } = this.props;\n      header = (\n        <nav className='drawer__header'>\n          <Link to='/getting-started' className='drawer__tab' title={intl.formatMessage(messages.start)} aria-label={intl.formatMessage(messages.start)}><Icon id='bars' fixedWidth /></Link>\n          {!columns.some(column => column.get('id') === 'HOME') && (\n            <Link to='/timelines/home' className='drawer__tab' title={intl.formatMessage(messages.home_timeline)} aria-label={intl.formatMessage(messages.home_timeline)}><Icon id='home' fixedWidth /></Link>\n          )}\n          {!columns.some(column => column.get('id') === 'NOTIFICATIONS') && (\n            <Link to='/notifications' className='drawer__tab' title={intl.formatMessage(messages.notifications)} aria-label={intl.formatMessage(messages.notifications)}><Icon id='bell' fixedWidth /></Link>\n          )}\n          {!columns.some(column => column.get('id') === 'COMMUNITY') && (\n            <Link to='/timelines/public/local' className='drawer__tab' title={intl.formatMessage(messages.community)} aria-label={intl.formatMessage(messages.community)}><Icon id='users' fixedWidth /></Link>\n          )}\n          {!columns.some(column => column.get('id') === 'PUBLIC') && (\n            <Link to='/timelines/public' className='drawer__tab' title={intl.formatMessage(messages.public)} aria-label={intl.formatMessage(messages.public)}><Icon id='globe' fixedWidth /></Link>\n          )}\n          <a href='/settings/preferences' className='drawer__tab' title={intl.formatMessage(messages.preferences)} aria-label={intl.formatMessage(messages.preferences)}><Icon id='cog' fixedWidth /></a>\n          <a href='/auth/sign_out' className='drawer__tab' title={intl.formatMessage(messages.logout)} aria-label={intl.formatMessage(messages.logout)} onClick={this.handleLogoutClick}><Icon id='sign-out' fixedWidth /></a>\n        </nav>\n      );\n    }\n\n    return (\n      <div className='drawer' role='region' aria-label={intl.formatMessage(messages.compose)}>\n        {header}\n\n        {(multiColumn || isSearchPage) && <SearchContainer /> }\n\n        <div className='drawer__pager'>\n          {!isSearchPage && <div className='drawer__inner' onFocus={this.onFocus}>\n            <NavigationContainer onClose={this.onBlur} />\n\n            <ComposeFormContainer />\n\n            <div className='drawer__inner__mastodon'>\n              <img alt='' draggable='false' src={mascot || elephantUIPlane} />\n            </div>\n          </div>}\n\n          <Motion defaultStyle={{ x: isSearchPage ? 0 : -100 }} style={{ x: spring(showSearch || isSearchPage ? 0 : -100, { stiffness: 210, damping: 20 }) }}>\n            {({ x }) => (\n              <div className='drawer__inner darker' style={{ transform: `translateX(${x}%)`, visibility: x === -100 ? 'hidden' : 'visible' }}>\n                <SearchResultsContainer />\n              </div>\n            )}\n          </Motion>\n        </div>\n      </div>\n    );\n  }\n\n}\n"],"sourceRoot":""}