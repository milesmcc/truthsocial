{"version":3,"sources":["webpack:///./app/javascript/mastodon/features/pinned_statuses/index.js"],"names":["messages","defineMessages","heading","PinnedStatuses","connect","state","statusIds","getIn","hasMore","injectIntl","handleHeaderClick","column","scrollTop","setRef","c","componentWillMount","this","props","dispatch","fetchPinnedStatuses","render","intl","shouldUpdateScroll","multiColumn","bindToDocument","icon","formatMessage","ref","scrollKey","ImmutablePureComponent","propTypes","PropTypes","func","isRequired","ImmutablePropTypes","list","object","bool"],"mappings":"6QAWMA,EAAWC,YAAe,CAC9BC,QAAQ,CAAD,iDAUHC,EAFUC,mBALQ,SAAAC,GAAK,MAAK,CAChCC,UAAWD,EAAME,MAAM,CAAC,eAAgB,OAAQ,UAChDC,UAAWH,EAAME,MAAM,CAAC,eAAgB,OAAQ,Y,GAIjDE,a,wJAgBCC,kBAAoB,WAClB,EAAKC,OAAOC,a,EAGdC,OAAS,SAAAC,GACP,EAAKH,OAASG,G,8CAThBC,mBAAA,WACEC,KAAKC,MAAMC,SAASC,gB,EAWtBC,OAAA,WACE,MAAsEJ,KAAKC,MAAnEI,EAAR,EAAQA,KAAMC,EAAd,EAAcA,mBAAoBhB,EAAlC,EAAkCA,UAAWE,EAA7C,EAA6CA,QAASe,EAAtD,EAAsDA,YAEtD,OACE,kBAAC,IAAD,CAAQC,gBAAiBD,EAAaE,KAAK,aAAavB,QAASmB,EAAKK,cAAc1B,EAASE,SAAUyB,IAAKX,KAAKH,QAC/G,YAAC,IAAD,IACA,YAAC,IAAD,CACEP,UAAWA,EACXsB,UAAU,kBACVpB,QAASA,EACTc,mBAAoBA,EACpBE,gBAAiBD,M,GAlCEM,K,EAEpBC,UAAY,CACjBZ,SAAUa,IAAUC,KAAKC,WACzBX,mBAAoBS,IAAUC,KAC9B1B,UAAW4B,IAAmBC,KAAKF,WACnCZ,KAAMU,IAAUK,OAAOH,WACvBzB,QAASuB,IAAUM,KAAKJ,WACxBV,YAAaQ,IAAUM,M","file":"js/features/pinned_statuses-aea8f364ba1e803bfa3f.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { fetchPinnedStatuses } from '../../actions/pin_statuses';\nimport Column from '../ui/components/column';\nimport ColumnBackButtonSlim from '../../components/column_back_button_slim';\nimport StatusList from '../../components/status_list';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nconst messages = defineMessages({\n  heading: { id: 'column.pins', defaultMessage: 'Pinned toot' },\n});\n\nconst mapStateToProps = state => ({\n  statusIds: state.getIn(['status_lists', 'pins', 'items']),\n  hasMore: !!state.getIn(['status_lists', 'pins', 'next']),\n});\n\nexport default @connect(mapStateToProps)\n@injectIntl\nclass PinnedStatuses extends ImmutablePureComponent {\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    shouldUpdateScroll: PropTypes.func,\n    statusIds: ImmutablePropTypes.list.isRequired,\n    intl: PropTypes.object.isRequired,\n    hasMore: PropTypes.bool.isRequired,\n    multiColumn: PropTypes.bool,\n  };\n\n  componentWillMount () {\n    this.props.dispatch(fetchPinnedStatuses());\n  }\n\n  handleHeaderClick = () => {\n    this.column.scrollTop();\n  }\n\n  setRef = c => {\n    this.column = c;\n  }\n\n  render () {\n    const { intl, shouldUpdateScroll, statusIds, hasMore, multiColumn } = this.props;\n\n    return (\n      <Column bindToDocument={!multiColumn} icon='thumb-tack' heading={intl.formatMessage(messages.heading)} ref={this.setRef}>\n        <ColumnBackButtonSlim />\n        <StatusList\n          statusIds={statusIds}\n          scrollKey='pinned_statuses'\n          hasMore={hasMore}\n          shouldUpdateScroll={shouldUpdateScroll}\n          bindToDocument={!multiColumn}\n        />\n      </Column>\n    );\n  }\n\n}\n"],"sourceRoot":""}