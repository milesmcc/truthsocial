{"version":3,"sources":["webpack:///./app/javascript/mastodon/features/account_gallery/components/media_item.js","webpack:///./app/javascript/mastodon/features/account_gallery/index.js"],"names":["MediaItem","state","visible","displayMedia","props","attachment","getIn","loaded","handleImageLoad","setState","handleMouseEnter","e","hoverToPlay","target","play","handleMouseLeave","pause","currentTime","handleClick","button","ctrlKey","metaKey","preventDefault","onOpenMedia","autoPlayGif","indexOf","this","get","render","thumbnail","label","icon","content","displayWidth","width","Math","floor","height","status","title","includes","src","alt","onLoad","id","x","y","style","objectPosition","className","aria-label","role","onMouseEnter","onMouseLeave","autoPlay","isIOS","loop","muted","href","onClick","rel","hash","classNames","dummy","useBlurhash","ImmutablePureComponent","propTypes","ImmutablePropTypes","map","isRequired","PropTypes","number","func","LoadMoreMedia","handleLoadMore","onLoadMore","maxId","disabled","shouldUpdateScroll","string","AccountGallery","connect","isAccount","params","accountId","attachments","getAccountGallery","isLoading","hasMore","suspended","blockedBy","handleScrollToBottom","size","last","undefined","handleScroll","scrollTop","scrollHeight","clientHeight","dispatch","expandAccountMediaTimeline","handleLoadOlder","handleOpenMedia","statusId","openModal","media","options","index","findIndex","handleRef","c","offsetWidth","componentDidMount","fetchAccount","componentWillReceiveProps","nextProps","multiColumn","emptyMessage","loadOlder","defaultMessage","scrollKey","onScroll","ref","object","list","bool"],"mappings":"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","file":"js/features/account_gallery-41fcfaa49d6a9979ab9b.chunk.js","sourcesContent":["import Blurhash from 'mastodon/components/blurhash';\nimport classNames from 'classnames';\nimport Icon from 'mastodon/components/icon';\nimport { autoPlayGif, displayMedia, useBlurhash } from 'mastodon/initial_state';\nimport { isIOS } from 'mastodon/is_mobile';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nexport default class MediaItem extends ImmutablePureComponent {\n\n  static propTypes = {\n    attachment: ImmutablePropTypes.map.isRequired,\n    displayWidth: PropTypes.number.isRequired,\n    onOpenMedia: PropTypes.func.isRequired,\n  };\n\n  state = {\n    visible: displayMedia !== 'hide_all' && !this.props.attachment.getIn(['status', 'sensitive']) || displayMedia === 'show_all',\n    loaded: false,\n  };\n\n  handleImageLoad = () => {\n    this.setState({ loaded: true });\n  }\n\n  handleMouseEnter = e => {\n    if (this.hoverToPlay()) {\n      e.target.play();\n    }\n  }\n\n  handleMouseLeave = e => {\n    if (this.hoverToPlay()) {\n      e.target.pause();\n      e.target.currentTime = 0;\n    }\n  }\n\n  hoverToPlay () {\n    return !autoPlayGif && ['gifv', 'video'].indexOf(this.props.attachment.get('type')) !== -1;\n  }\n\n  handleClick = e => {\n    if (e.button === 0 && !(e.ctrlKey || e.metaKey)) {\n      e.preventDefault();\n\n      if (this.state.visible) {\n        this.props.onOpenMedia(this.props.attachment);\n      } else {\n        this.setState({ visible: true });\n      }\n    }\n  }\n\n  render () {\n    const { attachment, displayWidth } = this.props;\n    const { visible, loaded } = this.state;\n\n    const width  = `${Math.floor((displayWidth - 4) / 3) - 4}px`;\n    const height = width;\n    const status = attachment.get('status');\n    const title  = status.get('spoiler_text') || attachment.get('description');\n\n    let thumbnail, label, icon, content;\n\n    if (!visible) {\n      icon = (\n        <span className='account-gallery__item__icons'>\n          <Icon id='eye-slash' />\n        </span>\n      );\n    } else {\n      if (['audio', 'video'].includes(attachment.get('type'))) {\n        content = (\n          <img\n            src={attachment.get('preview_url') || attachment.getIn(['account', 'avatar_static'])}\n            alt={attachment.get('description')}\n            onLoad={this.handleImageLoad}\n          />\n        );\n\n        if (attachment.get('type') === 'audio') {\n          label = <Icon id='music' />;\n        } else {\n          label = <Icon id='play' />;\n        }\n      } else if (attachment.get('type') === 'image') {\n        const focusX = attachment.getIn(['meta', 'focus', 'x']) || 0;\n        const focusY = attachment.getIn(['meta', 'focus', 'y']) || 0;\n        const x      = ((focusX /  2) + .5) * 100;\n        const y      = ((focusY / -2) + .5) * 100;\n\n        content = (\n          <img\n            src={attachment.get('preview_url')}\n            alt={attachment.get('description')}\n            style={{ objectPosition: `${x}% ${y}%` }}\n            onLoad={this.handleImageLoad}\n          />\n        );\n      } else if (attachment.get('type') === 'gifv') {\n        content = (\n          <video\n            className='media-gallery__item-gifv-thumbnail'\n            aria-label={attachment.get('description')}\n            role='application'\n            src={attachment.get('url')}\n            onMouseEnter={this.handleMouseEnter}\n            onMouseLeave={this.handleMouseLeave}\n            autoPlay={!isIOS() && autoPlayGif}\n            loop\n            muted\n          />\n        );\n\n        label = 'GIF';\n      }\n\n      thumbnail = (\n        <div className='media-gallery__gifv'>\n          {content}\n\n          {label && <span className='media-gallery__gifv__label'>{label}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <div className='account-gallery__item' style={{ width, height }}>\n        <a className='media-gallery__item-thumbnail' href={status.get('url')} onClick={this.handleClick} title={title} target='_blank' rel='noopener noreferrer'>\n          <Blurhash\n            hash={attachment.get('blurhash')}\n            className={classNames('media-gallery__preview', { 'media-gallery__preview--hidden': visible && loaded })}\n            dummy={!useBlurhash}\n          />\n\n          {visible ? thumbnail : icon}\n        </a>\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport { fetchAccount } from 'mastodon/actions/accounts';\nimport { expandAccountMediaTimeline } from '../../actions/timelines';\nimport LoadingIndicator from 'mastodon/components/loading_indicator';\nimport Column from '../ui/components/column';\nimport ColumnBackButton from 'mastodon/components/column_back_button';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { getAccountGallery } from 'mastodon/selectors';\nimport MediaItem from './components/media_item';\nimport HeaderContainer from '../account_timeline/containers/header_container';\nimport { ScrollContainer } from 'react-router-scroll-4';\nimport LoadMore from 'mastodon/components/load_more';\nimport MissingIndicator from 'mastodon/components/missing_indicator';\nimport { openModal } from 'mastodon/actions/modal';\nimport { FormattedMessage } from 'react-intl';\n\nconst mapStateToProps = (state, props) => ({\n  isAccount: !!state.getIn(['accounts', props.params.accountId]),\n  attachments: getAccountGallery(state, props.params.accountId),\n  isLoading: state.getIn(['timelines', `account:${props.params.accountId}:media`, 'isLoading']),\n  hasMore: state.getIn(['timelines', `account:${props.params.accountId}:media`, 'hasMore']),\n  suspended: state.getIn(['accounts', props.params.accountId, 'suspended'], false),\n  blockedBy: state.getIn(['relationships', props.params.accountId, 'blocked_by'], false),\n});\n\nclass LoadMoreMedia extends ImmutablePureComponent {\n\n  static propTypes = {\n    shouldUpdateScroll: PropTypes.func,\n    maxId: PropTypes.string,\n    onLoadMore: PropTypes.func.isRequired,\n  };\n\n  handleLoadMore = () => {\n    this.props.onLoadMore(this.props.maxId);\n  }\n\n  render () {\n    return (\n      <LoadMore\n        disabled={this.props.disabled}\n        onClick={this.handleLoadMore}\n      />\n    );\n  }\n\n}\n\nexport default @connect(mapStateToProps)\nclass AccountGallery extends ImmutablePureComponent {\n\n  static propTypes = {\n    params: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    attachments: ImmutablePropTypes.list.isRequired,\n    isLoading: PropTypes.bool,\n    hasMore: PropTypes.bool,\n    isAccount: PropTypes.bool,\n    blockedBy: PropTypes.bool,\n    suspended: PropTypes.bool,\n    multiColumn: PropTypes.bool,\n  };\n\n  state = {\n    width: 323,\n  };\n\n  componentDidMount () {\n    this.props.dispatch(fetchAccount(this.props.params.accountId));\n    this.props.dispatch(expandAccountMediaTimeline(this.props.params.accountId));\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.params.accountId !== this.props.params.accountId && nextProps.params.accountId) {\n      this.props.dispatch(fetchAccount(nextProps.params.accountId));\n      this.props.dispatch(expandAccountMediaTimeline(this.props.params.accountId));\n    }\n  }\n\n  handleScrollToBottom = () => {\n    if (this.props.hasMore) {\n      this.handleLoadMore(this.props.attachments.size > 0 ? this.props.attachments.last().getIn(['status', 'id']) : undefined);\n    }\n  }\n\n  handleScroll = e => {\n    const { scrollTop, scrollHeight, clientHeight } = e.target;\n    const offset = scrollHeight - scrollTop - clientHeight;\n\n    if (150 > offset && !this.props.isLoading) {\n      this.handleScrollToBottom();\n    }\n  }\n\n  handleLoadMore = maxId => {\n    this.props.dispatch(expandAccountMediaTimeline(this.props.params.accountId, { maxId }));\n  };\n\n  handleLoadOlder = e => {\n    e.preventDefault();\n    this.handleScrollToBottom();\n  }\n\n  handleOpenMedia = attachment => {\n    const { dispatch } = this.props;\n    const statusId = attachment.getIn(['status', 'id']);\n\n    if (attachment.get('type') === 'video') {\n      dispatch(openModal('VIDEO', { media: attachment, statusId, options: { autoPlay: true } }));\n    } else if (attachment.get('type') === 'audio') {\n      dispatch(openModal('AUDIO', { media: attachment, statusId, options: { autoPlay: true } }));\n    } else {\n      const media = attachment.getIn(['status', 'media_attachments']);\n      const index = media.findIndex(x => x.get('id') === attachment.get('id'));\n\n      dispatch(openModal('MEDIA', { media, index, statusId }));\n    }\n  }\n\n  handleRef = c => {\n    if (c) {\n      this.setState({ width: c.offsetWidth });\n    }\n  }\n\n  render () {\n    const { attachments, shouldUpdateScroll, isLoading, hasMore, isAccount, multiColumn, blockedBy, suspended } = this.props;\n    const { width } = this.state;\n\n    if (!isAccount) {\n      return (\n        <Column>\n          <MissingIndicator />\n        </Column>\n      );\n    }\n\n    if (!attachments && isLoading) {\n      return (\n        <Column>\n          <LoadingIndicator />\n        </Column>\n      );\n    }\n\n    let loadOlder = null;\n\n    if (hasMore && !(isLoading && attachments.size === 0)) {\n      loadOlder = <LoadMore visible={!isLoading} onClick={this.handleLoadOlder} />;\n    }\n\n    let emptyMessage;\n\n    if (suspended) {\n      emptyMessage = <FormattedMessage id='empty_column.account_suspended' defaultMessage='Account suspended' />;\n    } else if (blockedBy) {\n      emptyMessage = <FormattedMessage id='empty_column.account_unavailable' defaultMessage='Profile unavailable' />;\n    }\n\n    return (\n      <Column>\n        <ColumnBackButton multiColumn={multiColumn} />\n\n        <ScrollContainer scrollKey='account_gallery' shouldUpdateScroll={shouldUpdateScroll}>\n          <div className='scrollable scrollable--flex' onScroll={this.handleScroll}>\n            <HeaderContainer accountId={this.props.params.accountId} />\n\n            {(suspended || blockedBy) ? (\n              <div className='empty-column-indicator'>\n                {emptyMessage}\n              </div>\n            ) : (\n              <div role='feed' className='account-gallery__container' ref={this.handleRef}>\n                {attachments.map((attachment, index) => attachment === null ? (\n                  <LoadMoreMedia key={'more:' + attachments.getIn(index + 1, 'id')} maxId={index > 0 ? attachments.getIn(index - 1, 'id') : null} onLoadMore={this.handleLoadMore} />\n                ) : (\n                  <MediaItem key={attachment.get('id')} attachment={attachment} displayWidth={width} onOpenMedia={this.handleOpenMedia} />\n                ))}\n\n                {loadOlder}\n              </div>\n            )}\n\n            {isLoading && attachments.size === 0 && (\n              <div className='scrollable__append'>\n                <LoadingIndicator />\n              </div>\n            )}\n          </div>\n        </ScrollContainer>\n      </Column>\n    );\n  }\n\n}\n"],"sourceRoot":""}