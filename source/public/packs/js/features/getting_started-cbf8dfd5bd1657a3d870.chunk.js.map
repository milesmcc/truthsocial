{"version":3,"sources":["webpack:///./app/javascript/mastodon/features/getting_started/index.js"],"names":["messages","defineMessages","home_timeline","notifications","public_timeline","settings_subheading","community_timeline","direct","bookmarks","preferences","follow_requests","favourites","blocks","domain_blocks","mutes","pins","lists","discover","personal","security","menu","profile_directory","GettingStarted","connect","state","myAccount","getIn","me","columns","unreadFollowRequests","ImmutableList","size","dispatch","fetchFollowRequests","injectIntl","componentDidMount","this","props","multiColumn","window","innerWidth","context","router","history","replace","render","number","limit","intl","navItems","height","push","text","formatMessage","icon","to","find","item","get","badge","href","bindToDocument","label","className","id","fixedWidth","defaultMessage","style","withHotkeys","showTrends","ImmutablePureComponent","contextTypes","PropTypes","object","isRequired","propTypes","ImmutablePropTypes","map","list","bool","func","unreadNotifications"],"mappings":"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","file":"js/features/getting_started-cbf8dfd5bd1657a3d870.chunk.js","sourcesContent":["import React from 'react';\nimport Column from '../ui/components/column';\nimport ColumnLink from '../ui/components/column_link';\nimport ColumnSubheading from '../ui/components/column_subheading';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { me, profile_directory, showTrends } from '../../initial_state';\nimport { fetchFollowRequests } from 'mastodon/actions/accounts';\nimport { List as ImmutableList } from 'immutable';\nimport NavigationContainer from '../compose/containers/navigation_container';\nimport Icon from 'mastodon/components/icon';\nimport LinkFooter from 'mastodon/features/ui/components/link_footer';\nimport TrendsContainer from './containers/trends_container';\n\nconst messages = defineMessages({\n  home_timeline: { id: 'tabs_bar.home', defaultMessage: 'Home' },\n  notifications: { id: 'tabs_bar.notifications', defaultMessage: 'Notifications' },\n  public_timeline: { id: 'navigation_bar.public_timeline', defaultMessage: 'Federated timeline' },\n  settings_subheading: { id: 'column_subheading.settings', defaultMessage: 'Settings' },\n  community_timeline: { id: 'navigation_bar.community_timeline', defaultMessage: 'Local timeline' },\n  direct: { id: 'navigation_bar.direct', defaultMessage: 'Direct Messages' },\n  bookmarks: { id: 'navigation_bar.bookmarks', defaultMessage: 'Bookmarks' },\n  preferences: { id: 'navigation_bar.preferences', defaultMessage: 'Preferences' },\n  follow_requests: { id: 'navigation_bar.follow_requests', defaultMessage: 'Follow Requests' },\n  favourites: { id: 'navigation_bar.favourites', defaultMessage: 'Favourites' },\n  blocks: { id: 'navigation_bar.blocks', defaultMessage: 'Blocked Users' },\n  domain_blocks: { id: 'navigation_bar.domain_blocks', defaultMessage: 'Hidden domains' },\n  mutes: { id: 'navigation_bar.mutes', defaultMessage: 'Mute Users' },\n  pins: { id: 'navigation_bar.pins', defaultMessage: 'Pinned toots' },\n  lists: { id: 'navigation_bar.lists', defaultMessage: 'Lists' },\n  discover: { id: 'navigation_bar.discover', defaultMessage: 'Discover' },\n  personal: { id: 'navigation_bar.personal', defaultMessage: 'Personal' },\n  security: { id: 'navigation_bar.security', defaultMessage: 'Security' },\n  menu: { id: 'getting_started.heading', defaultMessage: 'Getting started' },\n  profile_directory: { id: 'getting_started.directory', defaultMessage: 'Profile directory' },\n});\n\nconst mapStateToProps = state => ({\n  myAccount: state.getIn(['accounts', me]),\n  columns: state.getIn(['settings', 'columns']),\n  unreadFollowRequests: state.getIn(['user_lists', 'follow_requests', 'items'], ImmutableList()).size,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchFollowRequests: () => dispatch(fetchFollowRequests()),\n});\n\nconst badgeDisplay = (number, limit) => {\n  if (number === 0) {\n    return undefined;\n  } else if (limit && number >= limit) {\n    return `${limit}+`;\n  } else {\n    return number;\n  }\n};\n\nconst NAVIGATION_PANEL_BREAKPOINT = 600 + (285 * 2) + (10 * 2);\n\nexport default @connect(mapStateToProps, mapDispatchToProps)\n@injectIntl\nclass GettingStarted extends ImmutablePureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object.isRequired,\n  };\n\n  static propTypes = {\n    intl: PropTypes.object.isRequired,\n    myAccount: ImmutablePropTypes.map.isRequired,\n    columns: ImmutablePropTypes.list,\n    multiColumn: PropTypes.bool,\n    fetchFollowRequests: PropTypes.func.isRequired,\n    unreadFollowRequests: PropTypes.number,\n    unreadNotifications: PropTypes.number,\n  };\n\n  componentDidMount () {\n    const { fetchFollowRequests, multiColumn } = this.props;\n\n    if (!multiColumn && window.innerWidth >= NAVIGATION_PANEL_BREAKPOINT) {\n      this.context.router.history.replace('/timelines/home');\n      return;\n    }\n\n    fetchFollowRequests();\n  }\n\n  render () {\n    const { intl, myAccount, columns, multiColumn, unreadFollowRequests } = this.props;\n\n    const navItems = [];\n    let height = (multiColumn) ? 0 : 60;\n\n    if (multiColumn) {\n      navItems.push(\n        <ColumnSubheading key='header-discover' text={intl.formatMessage(messages.discover)} />,\n        <ColumnLink key='community_timeline' icon='users' text={intl.formatMessage(messages.community_timeline)} to='/timelines/public/local' />,\n        <ColumnLink key='public_timeline' icon='globe' text={intl.formatMessage(messages.public_timeline)} to='/timelines/public' />,\n      );\n\n      height += 34 + 48*2;\n\n\n      navItems.push(\n        <ColumnSubheading key='header-personal' text={intl.formatMessage(messages.personal)} />,\n      );\n\n      height += 34;\n    } \n\n    if (multiColumn && !columns.find(item => item.get('id') === 'HOME')) {\n      navItems.push(\n        <ColumnLink key='home' icon='home' text={intl.formatMessage(messages.home_timeline)} to='/timelines/home' />,\n      );\n      height += 48;\n    }\n\n    navItems.push(\n      <ColumnLink key='direct' icon='envelope' text={intl.formatMessage(messages.direct)} to='/timelines/direct' />,\n    );\n\n    height += 48*4;\n\n    if (myAccount.get('locked') || unreadFollowRequests > 0) {\n      navItems.push(<ColumnLink key='follow_requests' icon='user-plus' text={intl.formatMessage(messages.follow_requests)} badge={badgeDisplay(unreadFollowRequests, 40)} to='/follow_requests' />);\n      height += 48;\n    }\n\n    if (!multiColumn) {\n      navItems.push(\n        <ColumnLink key='preferences' icon='gears' text={intl.formatMessage(messages.preferences)} href='/settings/preferences' />,\n      );\n\n      height += 34 + 48;\n    }\n\n    return (\n      <Column bindToDocument={!multiColumn} label={intl.formatMessage(messages.menu)}>\n        {multiColumn && <div className='column-header__wrapper'>\n          <h1 className='column-header'>\n            <button>\n              <Icon id='bars' className='column-header__icon' fixedWidth />\n              <FormattedMessage id='getting_started.heading' defaultMessage='Getting started' />\n            </button>\n          </h1>\n        </div>}\n\n        <div className='getting-started'>\n          <div className='getting-started__wrapper' style={{ height }}>\n            {!multiColumn && <NavigationContainer />}\n            {navItems}\n          </div>\n\n          {!multiColumn && <div className='flex-spacer' />}\n\n          <LinkFooter withHotkeys={multiColumn} />\n        </div>\n\n        {multiColumn && showTrends && <TrendsContainer />}\n      </Column>\n    );\n  }\n\n}\n"],"sourceRoot":""}